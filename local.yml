version: "3"

services:

  backend:
    env_file:
      - ./.envs/.local/.app
    ports:
     - "8000:8000"
    depends_on:
      - postgres
      - redis
    # networks:
    #   - todo_network
    container_name: backend
    build:
      context: .
      dockerfile: ./compose/go/Dockerfile
    volumes:
      - ./app/

    command: ["/app/bin/app"]

  redis:
    # build:
    #   context: .
    container_name: goredis
    image: redis:7
    env_file:
      - ./.envs/.local/.app
    ports:
      - "6379:6379"
    # networks:
    #   - todo_network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    env_file:
      - ./.envs/.local/.app
    ports:
      - "8081:8081"
    # networks:
    #   - todo_network

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: todo_system_pg
    container_name: postgres
    command: postgres -c 'max_connections=1000'
    ports:
      - "5432:5432"
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.app
    # networks:
    #   - todo_network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:5050"
    depends_on:
      - backend
    env_file:
      - ./.envs/.local/.app
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    # networks:
    #   - todo_network

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  pgadmin-data: {}
  # backend_logs: {}

# networks:
#   todo_network: